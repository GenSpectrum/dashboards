---
interface Props {
    initialLineage?: string;
}
const { initialLineage } = Astro.props;
---

<variant-filter data-message={JSON.stringify({ lineage: initialLineage })}>
    <div class='flex flex-col items-stretch gap-2'>
        <gs-text-input
            id='lineage-filter'
            lapisField='lineage'
            placeholderText='Lineage'
            initialValue={initialLineage}
            width='100%'></gs-text-input>
        <button id='variantFilterSubmitButton' class='rounded-lg border bg-white p-4 hover:bg-amber-200' type='submit'>
            Submit
        </button>
    </div>
</variant-filter>

<script>
    import { Routing } from '../../routes/routing.ts';
    import { WestNileView1 } from '../../routes/westNileView1';

    class VariantFilter extends HTMLElement {
        constructor() {
            super();
            let { lineage } = JSON.parse(this.dataset.message);
            const lineageFilter = document.getElementById('lineage-filter');
            const submitButton = document.getElementById('variantFilterSubmitButton');

            lineageFilter.addEventListener('gs-text-input-changed', (event: CustomEvent) => {
                lineage = event.detail.lineage;
            });

            submitButton.addEventListener('click', () => {
                const currentRoute = Routing.getCurrentRouteInBrowser()! as WestNileView1.Route;
                const newRoute = {
                    ...currentRoute,
                    variantFilter: { lineage },
                };
                Routing.navigateTo(newRoute);
            });
        }
    }

    customElements.define('variant-filter', VariantFilter);
</script>

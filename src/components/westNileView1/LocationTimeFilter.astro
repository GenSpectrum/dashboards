---
import { isCustomDateRange } from '../../routes/helpers';
import type { DateRange } from '../../routes/helpers';
import { WestNileView1 } from '../../routes/westNileView1';

interface Props {
    initialLocation: WestNileView1.LapisLocation;
    initialDateRange: DateRange;
}

const { initialLocation, initialDateRange } = Astro.props;

const { geo_loc_country, geo_loc_admin_1 } = initialLocation;
const initialLocationValue = [geo_loc_country, geo_loc_admin_1].filter(Boolean).join(' / ');
const initialDateRangeValue = isCustomDateRange(initialDateRange) ? 'custom' : initialDateRange;
const initialDateRangeFrom = isCustomDateRange(initialDateRange) ? initialDateRange.from : undefined;
const initialDateRangeTo = isCustomDateRange(initialDateRange) ? initialDateRange.to : undefined;

const today = new Date().toISOString().substring(0, 10);
const customDateRangeOptions = [
    { label: 'Since 2020', dateFrom: '2020-01-01', dateTo: today },
    { label: '2010-2019', dateFrom: '2010-01-01', dateTo: '2019-12-31' },
    { label: '2000-2009', dateFrom: '2000-01-01', dateTo: '2009-12-31' },
    { label: 'Before 2000', dateFrom: WestNileView1.earliestDate, dateTo: '1999-12-31' },
];
---

<location-time-filter data-message={JSON.stringify({ location: initialLocation, dateRange: initialDateRange })}>
    <div class='flex flex-col items-stretch gap-2'>
        <gs-location-filter
            id='locationFilter'
            fields='["geo_loc_country", "geo_loc_admin_1"]'
            initialValue={initialLocationValue}
            width='100%'></gs-location-filter>
        {/* TODO This is a temporary fix to mitigate https://github.com/GenSpectrum/dashboards/issues/283 */}
        <div class='h-[9rem]'>
            <gs-date-range-selector
                id='dateRangeSelector'
                customSelectOptions={JSON.stringify(customDateRangeOptions)}
                earliestDate={WestNileView1.earliestDate}
                initialValue={initialDateRangeValue}
                initialDateFrom={initialDateRangeFrom}
                initialDateTo={initialDateRangeTo}
                width='100%'
                dateColumn='date'></gs-date-range-selector>
        </div>
        <button
            id='locationTimeFilterSubmitButton'
            class='rounded-lg border bg-white p-4 hover:bg-amber-200'
            type='submit'
        >
            Submit
        </button>
    </div>
</location-time-filter>

<script>
    import { Routing } from '../../routes/routing.ts';
    import { WestNileView1 } from '../../routes/westNileView1';

    class LocationTimeFilter extends HTMLElement {
        constructor() {
            super();
            let { location, dateRange } = JSON.parse(this.dataset.message);
            const locationFilter = document.getElementById('locationFilter');
            const dateRangeSelector = document.getElementById('dateRangeSelector');
            const submitButton = document.getElementById('locationTimeFilterSubmitButton');

            locationFilter.addEventListener('gs-location-changed', (event: CustomEvent) => {
                location = event.detail;
            });

            dateRangeSelector.addEventListener('gs-date-range-changed', (event: CustomEvent) => {
                dateRange = {
                    from: event.detail.dateFrom,
                    to: event.detail.dateTo,
                };
            });

            submitButton.addEventListener('click', () => {
                const currentRoute = Routing.getCurrentRouteInBrowser() as WestNileView1.Route;
                const newRoute = {
                    ...currentRoute,
                    baselineFilter: {
                        ...currentRoute.baselineFilter,
                        location,
                        dateRange,
                    },
                };
                Routing.navigateTo(newRoute);
            });
        }
    }

    customElements.define('location-time-filter', LocationTimeFilter);
</script>

---
import BaseLayout from '../layouts/base/BaseLayout.astro';
import { LocationTimeVariantFilter } from '../components/LocationTimeVariantFilter';
import { parseUrl } from '../routing';

const routeData = parseUrl(Astro.url);
const lapisLocation = {
    region: routeData.region,
    country: routeData.country,
    division: routeData.division,
};

let subDivisionField = undefined;
let subDivisionLabel = '';
if (lapisLocation.country === undefined) {
    subDivisionField = 'country';
    subDivisionLabel = 'Countries';
} else if (lapisLocation.division === undefined) {
    subDivisionField = 'division';
    subDivisionLabel = 'Geographic sub-divisions';
}
---

<BaseLayout title='GenSpectrum'>
    <gs-app lapis='https://lapis.cov-spectrum.org/open/v2'>
        <div class='p-2' style='display: grid; grid-template-columns: 300px 1fr; grid-column-gap: 16px;'>
            <LocationTimeVariantFilter initialLocation={lapisLocation} client:only='react' />
            <div
                style='display: grid; grid-template-columns: repeat(auto-fit, minmax(min(100vw, 650px), 1fr)); grid-column-gap: 16px; grid-row-gap: 24px;'
            >
                <gs-prevalence-over-time
                    numerator={JSON.stringify({
                        displayName: '',
                        ...lapisLocation,
                    })}
                    denominator='{}'
                    granularity='month'
                    smoothingWindow='0'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-prevalence-over-time>
                <gs-relative-growth-advantage
                    numerator={JSON.stringify(lapisLocation)}
                    denominator='{}'
                    generationTime='7'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-relative-growth-advantage>
                <gs-mutations
                    variant={JSON.stringify(lapisLocation)}
                    sequenceType='nucleotide'
                    views='["grid", "table", "insertions"]'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-mutations>
                <gs-mutations
                    variant={JSON.stringify(lapisLocation)}
                    sequenceType='amino acid'
                    views='["grid", "table", "insertions"]'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-mutations>
                <gs-aggregate
                    fields='["nextcladePangoLineage"]'
                    filter={JSON.stringify(lapisLocation)}
                    headline='Lineages'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-aggregate>
                {
                    subDivisionField && (
                        <gs-aggregate
                            fields={JSON.stringify([subDivisionField])}
                            filter={JSON.stringify(lapisLocation)}
                            headline={subDivisionLabel}
                            size={JSON.stringify({
                                width: '100%',
                                height: '400px',
                            })}
                        />
                    )
                }
                <gs-aggregate
                    fields='["host"]'
                    filter={JSON.stringify(lapisLocation)}
                    headline='Hosts'
                    size={JSON.stringify({
                        width: '100%',
                        height: '400px',
                    })}></gs-aggregate>
            </div>
        </div>
    </gs-app>
</BaseLayout>

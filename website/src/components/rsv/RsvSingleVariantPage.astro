---
import ComponentWrapper from '../../components/ComponentWrapper.astro';
import ComponentsGrid from '../../components/ComponentsGrid.astro';
import { getDashboardsConfig } from '../../config';
import SingleVariantOrganismPageLayout from '../../layouts/OrganismPage/SingleVariantOrganismPageLayout.astro';
import { type Organisms } from '../../types/Organism';
import { chooseGranularityBasedOnDateRange } from '../../util/chooseGranularityBasedOnDateRange';
import { getLineageFilterConfigs, defaultTablePageSize, getLineageFilterFields } from '../../views/View';
import { getLapisMutations, getLocationSubdivision } from '../../views/helpers';
import type { OrganismViewKey, singleVariantViewKey } from '../../views/routing';
import { ServerSide } from '../../views/serverSideRouting';
import ComponentHeadline from '../ComponentHeadline.astro';
import { SingleVariantPageStateSelector } from '../pageStateSelectors/SingleVariantPageStateSelector';

interface Props {
    organismViewKey: Extract<
        OrganismViewKey,
        `${typeof Organisms.rsvA | typeof Organisms.rsvB}.${typeof singleVariantViewKey}`
    >;
}

const { organismViewKey } = Astro.props;
const view = ServerSide.routing.getOrganismView(organismViewKey);
const pageState = view.pageStateHandler.parsePageStateFromUrl(Astro.url);

const variantFilter = view.pageStateHandler.toLapisFilter(pageState);
const baselineFilter = view.pageStateHandler.toLapisFilterWithoutVariant(pageState);
const timeGranularity = chooseGranularityBasedOnDateRange(
    pageState.baselineFilter.dateRange,
    new Date(view.organismConstants.earliestDate),
);

const { label: subdivisionLabel, field: subdivisionField } = getLocationSubdivision(
    view.organismConstants.locationFields,
    pageState.baselineFilter.location,
);

const initialMutations = getLapisMutations(pageState.variantFilter.mutations);
const lineageFilterConfigs = getLineageFilterConfigs(
    view.organismConstants.lineageFilters,
    pageState.variantFilter.lineages,
);
---

<SingleVariantOrganismPageLayout view={view}>
    <SingleVariantPageStateSelector
        slot='filters'
        locationFilterConfig={{
            locationFields: view.organismConstants.locationFields,
            initialLocation: pageState.baselineFilter.location,
            placeholderText: 'Sampling location',
        }}
        dateRangeFilterConfig={{
            initialDateRange: pageState.baselineFilter.dateRange,
            dateRangeOptions: view.organismConstants.dateRangeOptions,
            earliestDate: view.organismConstants.earliestDate,
            dateColumn: view.organismConstants.mainDateField,
        }}
        mutationFilterConfig={{ initialMutations }}
        lineageFilterConfigs={lineageFilterConfigs}
        pageState={pageState}
        organismViewKey={organismViewKey}
        organismsConfig={getDashboardsConfig().dashboards.organisms}
        client:only='react'
    />
    <div class='mx-[8px] flex flex-col gap-y-6' slot='dataDisplay'>
        <div class='h-56 sm:h-32'>
            <ComponentHeadline>Stats</ComponentHeadline>
            <gs-statistics
                numeratorFilter={JSON.stringify(variantFilter)}
                denominatorFilter={JSON.stringify(baselineFilter)}
                width='100%'
                height='100%'></gs-statistics>
        </div>
        <ComponentsGrid>
            <ComponentWrapper title='Prevalence over time'>
                <gs-prevalence-over-time
                    numeratorFilter={JSON.stringify({
                        displayName: '',
                        lapisFilter: variantFilter,
                    })}
                    denominatorFilter={JSON.stringify(baselineFilter)}
                    lapisDateField={view.organismConstants.mainDateField}
                    granularity={timeGranularity}
                    smoothingWindow='0'
                    pageSize={defaultTablePageSize}
                    width='100%'
                    height='100%'></gs-prevalence-over-time>
            </ComponentWrapper>
            <ComponentWrapper title='Nucleotide mutations'>
                <gs-mutations
                    lapisFilter={JSON.stringify(variantFilter)}
                    sequenceType='nucleotide'
                    views='["grid", "table", "insertions"]'
                    pageSize={defaultTablePageSize}
                    width='100%'
                    height='100%'></gs-mutations>
            </ComponentWrapper>
            <ComponentWrapper title='Amino acid mutations'>
                <gs-mutations
                    lapisFilter={JSON.stringify(variantFilter)}
                    sequenceType='amino acid'
                    views='["grid", "table", "insertions"]'
                    pageSize={defaultTablePageSize}
                    width='100%'
                    height='100%'></gs-mutations>
            </ComponentWrapper>
            {
                subdivisionField !== undefined && (
                    <ComponentWrapper title={subdivisionLabel}>
                        <gs-aggregate
                            fields={JSON.stringify([subdivisionField])}
                            filter={JSON.stringify(variantFilter)}
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'
                        />
                    </ComponentWrapper>
                )
            }
            <ComponentWrapper title='Clades and lineages'>
                <gs-aggregate
                    fields={JSON.stringify(getLineageFilterFields(view.organismConstants.lineageFilters))}
                    filter={JSON.stringify(variantFilter)}
                    pageSize={defaultTablePageSize}
                    width='100%'
                    height='100%'></gs-aggregate>
            </ComponentWrapper>
            <ComponentWrapper title='Hosts'>
                <gs-aggregate
                    fields={JSON.stringify([view.organismConstants.hostField])}
                    filter={JSON.stringify(variantFilter)}
                    pageSize={defaultTablePageSize}
                    width='100%'
                    height='100%'></gs-aggregate>
            </ComponentWrapper>
        </ComponentsGrid>

        <ComponentWrapper title='Nucleotide mutations over time' height='600px'>
            <gs-mutations-over-time
                width='100%'
                height='100%'
                lapisFilter={JSON.stringify(variantFilter)}
                sequenceType='nucleotide'
                views='["grid"]'
                granularity={timeGranularity}
                lapisDateField={view.organismConstants.mainDateField}></gs-mutations-over-time>
        </ComponentWrapper>

        <ComponentWrapper title='Amino acid mutations over time' height='600px'>
            <gs-mutations-over-time
                width='100%'
                height='100%'
                lapisFilter={JSON.stringify(variantFilter)}
                sequenceType='amino acid'
                views='["grid"]'
                granularity={timeGranularity}
                lapisDateField={view.organismConstants.mainDateField}></gs-mutations-over-time>
        </ComponentWrapper>
    </div>
</SingleVariantOrganismPageLayout>

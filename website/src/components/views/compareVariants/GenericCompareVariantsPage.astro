---
import SelectVariants from './SelectVariants.astro';
import { getDashboardsConfig } from '../../../config';
import SingleVariantOrganismPageLayout from '../../../layouts/OrganismPage/SingleVariantOrganismPageLayout.astro';
import { chooseGranularityBasedOnDateRange } from '../../../util/chooseGranularityBasedOnDateRange';
import { type OrganismViewKey, type OrganismWithViewKey } from '../../../views/routing';
import { ServerSide } from '../../../views/serverSideRouting';
import { compareVariantsViewKey } from '../../../views/viewKeys';
import ComponentsGrid from '../../ComponentsGrid.astro';
import GsMutationComparison from '../../genspectrum/GsMutationComparison.astro';
import GsPrevalenceOverTime from '../../genspectrum/GsPrevalenceOverTime.astro';
import { CompareVariantsPageStateSelector } from '../../pageStateSelectors/CompareVariantsPageStateSelector';
import { CompareVariantsSelectorFallback } from '../../pageStateSelectors/FallbackElement';

type OrganismViewCompareVariant = OrganismWithViewKey<typeof compareVariantsViewKey>;
interface Props {
    organism: OrganismViewCompareVariant;
}

const { organism } = Astro.props;
const organismViewKey = `${organism}.${compareVariantsViewKey}` satisfies OrganismViewKey;
const view = ServerSide.routing.getOrganismView(organismViewKey);

const pageState = view.pageStateHandler.parsePageStateFromUrl(Astro.url);

const datasetLapisFilter = view.pageStateHandler.datasetFilterToLapisFilter(pageState.datasetFilter);
const timeGranularity = chooseGranularityBasedOnDateRange(
    pageState.datasetFilter.dateRange,
    new Date(view.organismConstants.earliestDate),
);

const variantFilterConfigs = view.pageStateHandler.toVariantFilterConfigs(pageState);

const numeratorLapisFilters = view.pageStateHandler.variantFiltersToNamedLapisFilters(pageState);

const notEnoughVariantsSelected = pageState.variants.size < 2;
---

<SingleVariantOrganismPageLayout view={view}>
    <CompareVariantsPageStateSelector
        slot='filters'
        locationFilterConfig={{
            locationFields: view.organismConstants.locationFields,
            initialLocation: pageState.datasetFilter.location,
            placeholderText: 'Sampling location',
        }}
        dateRangeFilterConfig={{
            initialDateRange: pageState.datasetFilter.dateRange,
            dateRangeOptions: view.organismConstants.dateRangeOptions,
            earliestDate: view.organismConstants.earliestDate,
            dateColumn: view.organismConstants.mainDateField,
        }}
        variantFilterConfigs={variantFilterConfigs}
        organismViewKey={organismViewKey}
        organismsConfig={getDashboardsConfig().dashboards.organisms}
        client:only='react'
    >
        <CompareVariantsSelectorFallback slot='fallback' numFilters={numeratorLapisFilters.length} />
    </CompareVariantsPageStateSelector>
    {
        notEnoughVariantsSelected ? (
            <SelectVariants slot='dataDisplay' />
        ) : (
            <ComponentsGrid slot='dataDisplay'>
                <GsPrevalenceOverTime
                    numeratorFilters={numeratorLapisFilters}
                    denominatorFilter={datasetLapisFilter}
                    lapisDateField={view.organismConstants.mainDateField}
                    granularity={timeGranularity}
                    views={['line', 'table', 'bar', 'bubble']}
                />
                <GsMutationComparison lapisFilters={numeratorLapisFilters} sequenceType='nucleotide' />
                <GsMutationComparison lapisFilters={numeratorLapisFilters} sequenceType='amino acid' />
            </ComponentsGrid>
        )
    }
</SingleVariantOrganismPageLayout>

---
import { getDashboardsConfig } from '../config';
import ComponentWrapper from './ComponentWrapper.astro';
import ComponentsGrid from './ComponentsGrid.astro';
import SingleVariantOrganismPageLayout from '../layouts/OrganismPage/SingleVariantOrganismPageLayout.astro';
import type { Organism } from '../types/Organism';
import { defaultTablePageSize } from '../views/View';
import { type OrganismViewKey } from '../views/routing';
import { ServerSide } from '../views/serverSideRouting';
import { CompareVariantsPageStateSelector } from './pageStateSelectors/CompareVariantsPageStateSelector';
import { chooseGranularityBasedOnDateRange } from '../util/chooseGranularityBasedOnDateRange';
import { type compareVariantsViewKey } from '../views/viewKeys';

interface Props {
    organismViewKey: Extract<OrganismViewKey, `${Organism}.${typeof compareVariantsViewKey}`>;
}

const { organismViewKey } = Astro.props;
const view = ServerSide.routing.getOrganismView(organismViewKey);

const pageState = view.pageStateHandler.parsePageStateFromUrl(Astro.url);

const baselineFilter = view.pageStateHandler.baselineFilterToLapisFilter(pageState.baselineFilter);
const timeGranularity = chooseGranularityBasedOnDateRange(
    pageState.baselineFilter.dateRange,
    new Date(view.organismConstants.earliestDate),
);

const variantFilterConfigs = view.pageStateHandler.toVariantFilterConfigs(pageState);

const numeratorFilters = view.pageStateHandler.variantFiltersToNamedLapisFilters(pageState);
---

<SingleVariantOrganismPageLayout view={view}>
    <CompareVariantsPageStateSelector
        slot='filters'
        locationFilterConfig={{
            locationFields: view.organismConstants.locationFields,
            initialLocation: pageState.baselineFilter.location,
            placeholderText: 'Sampling location',
        }}
        dateRangeFilterConfig={{
            initialDateRange: pageState.baselineFilter.dateRange,
            dateRangeOptions: view.organismConstants.dateRangeOptions,
            earliestDate: view.organismConstants.earliestDate,
            dateColumn: view.organismConstants.mainDateField,
        }}
        variantFilterConfigs={variantFilterConfigs}
        emptyVariantFilterConfig={view.pageStateHandler.getEmptyVariantFilterConfig()}
        organismViewKey={organismViewKey}
        organismsConfig={getDashboardsConfig().dashboards.organisms}
        client:only='react'
    />
    <ComponentsGrid slot='dataDisplay'>
        <ComponentWrapper title='Prevalence over time'>
            <gs-prevalence-over-time
                numeratorFilter={JSON.stringify(numeratorFilters)}
                denominatorFilter={JSON.stringify(baselineFilter)}
                lapisDateField={view.organismConstants.mainDateField}
                granularity={timeGranularity}
                smoothingWindow='0'
                pageSize={defaultTablePageSize}
                width='100%'
                height='100%'
                views={JSON.stringify(['line', 'table', 'bar', 'bubble'])}></gs-prevalence-over-time>
        </ComponentWrapper>
        <ComponentWrapper title='Nucleotide changes'>
            <gs-mutation-comparison
                lapisFilters={JSON.stringify(numeratorFilters)}
                sequenceType='nucleotide'
                views='["venn", "table"]'
                pageSize={defaultTablePageSize}
                width='100%'
                height='100%'></gs-mutation-comparison>
        </ComponentWrapper>
        <ComponentWrapper title='Amino acid changes'>
            <gs-mutation-comparison
                lapisFilters={JSON.stringify(numeratorFilters)}
                sequenceType='amino acid'
                views='["venn", "table"]'
                pageSize={defaultTablePageSize}
                width='100%'
                height='100%'></gs-mutation-comparison>
        </ComponentWrapper>
    </ComponentsGrid>
</SingleVariantOrganismPageLayout>

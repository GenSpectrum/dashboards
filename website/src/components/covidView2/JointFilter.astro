---
import type { LapisMutationQuery } from '../../routes/helpers';
import type { LapisLocation1 } from '../../routes/helpers';
import type { DateRange } from '../../routes/helpers';
import { isCustomDateRange } from '../../routes/helpers';
import { ServerSide } from '../../routes/serverSideRouting';
import { getDashboardsConfig } from '../../config';

interface Props {
    filterId: number;
    initialLocation: LapisLocation1;
    initialDateRange: DateRange;
    initialNextcladePangoLineage?: string;
    initialMutations: LapisMutationQuery;
}

const { filterId, initialLocation, initialNextcladePangoLineage, initialDateRange, initialMutations } = Astro.props;

const { region, country, division } = initialLocation;
const initialLocationValue = [region, country, division].filter(Boolean).join(' / ');
const initialDateRangeValue = isCustomDateRange(initialDateRange) ? 'custom' : initialDateRange;
const initialDateRangeFrom = isCustomDateRange(initialDateRange) ? initialDateRange.from : undefined;
const initialDateRangeTo = isCustomDateRange(initialDateRange) ? initialDateRange.to : undefined;
---

<joint-filter
    data-message={JSON.stringify({
        filterId,
        location: initialLocation,
        dateRange: initialDateRange,
        nextcladePangoLineage: initialNextcladePangoLineage,
        mutations: initialMutations,
    })}
    data-organisms-config={JSON.stringify(getDashboardsConfig().dashboards.organisms)}
>
    <div>
        <div class='flex'>
            <div class='flex flex-1 flex-col gap-2 bg-blue-50 px-2 py-4'>
                <div class='font-semibold'>Filter dataset:</div>
                <gs-location-filter
                    id={`locationFilter${filterId}`}
                    fields='["region", "country", "division"]'
                    initialValue={initialLocationValue}
                    placeholderText='Sampling location'
                    width='100%'></gs-location-filter>
                <gs-date-range-selector
                    id={`dateRangeSelector${filterId}`}
                    customSelectOptions={JSON.stringify(ServerSide.covidView1.customDateRangeOptions)}
                    earliestDate={ServerSide.covidView1.earliestDate}
                    initialValue={initialDateRangeValue}
                    initialDateFrom={initialDateRangeFrom}
                    initialDateTo={initialDateRangeTo}
                    dateColumn='date'></gs-date-range-selector>
            </div>
            <div class='flex flex-1 flex-col border-l-2 bg-green-50 px-2 py-4'>
                <div class='mb-2 font-semibold'>Search variant:</div>
                <gs-lineage-filter
                    id={`lineageFilter${filterId}`}
                    lapisField='nextcladePangoLineage'
                    placeholderText='Pango Lineage'
                    initialValue={initialNextcladePangoLineage}
                    width='100%'
                >
                </gs-lineage-filter>
                <div class='mt-2 rounded-md bg-white'>
                    <gs-mutation-filter
                        id={`mutationFilter${filterId}`}
                        initialValue={JSON.stringify(initialMutations)}
                    >
                    </gs-mutation-filter>
                </div>
            </div>
        </div>
        <button
            id={`submitButton${filterId}`}
            class='mt-2 w-full rounded-lg border bg-white p-4 hover:bg-amber-200'
            type='submit'
        >
            Submit
        </button>
    </div>
</joint-filter>

<script>
    import { Routing } from '../../routes/routing.ts';
    import { CovidView2, type CovidView2Route } from '../../routes/covid';

    class JointFilter extends HTMLElement {
        constructor() {
            super();
            let { filterId, location, dateRange, nextcladePangoLineage, mutations } = JSON.parse(this.dataset.message!);
            const config = JSON.parse(this.dataset.organismsConfig!);
            const locationFilter = document.getElementById(`locationFilter${filterId}`);
            const dateRangeSelector = document.getElementById(`dateRangeSelector${filterId}`);
            const lineageFilter = document.getElementById(`lineageFilter${filterId}`);
            const mutationFilter = document.getElementById(`mutationFilter${filterId}`);
            const submitButton = document.getElementById(`submitButton${filterId}`);

            locationFilter?.addEventListener('gs-location-changed', (event: CustomEvent) => {
                location = event.detail;
            });

            dateRangeSelector?.addEventListener('gs-date-range-changed', (event: CustomEvent) => {
                dateRange = {
                    from: event.detail.dateFrom,
                    to: event.detail.dateTo,
                };
            });

            lineageFilter?.addEventListener('gs-lineage-filter-changed', (event: CustomEvent) => {
                nextcladePangoLineage = event.detail.nextcladePangoLineage;
            });

            mutationFilter?.addEventListener('gs-mutation-filter-changed', (event: CustomEvent) => {
                mutations = event.detail;
            });

            submitButton?.addEventListener('click', () => {
                const routing = new Routing(config);
                const currentRoute = routing.getCurrentRouteInBrowser() as CovidView2Route;
                routing.navigateTo(
                    new CovidView2(config).setFilter(currentRoute, {
                        id: filterId,
                        baselineFilter: {
                            location,
                            dateRange,
                        },
                        variantFilter: { nextcladePangoLineage, ...mutations },
                    }),
                );
            });
        }
    }

    customElements.define('joint-filter', JointFilter);
</script>

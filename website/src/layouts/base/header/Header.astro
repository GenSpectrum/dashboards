---
import { getSession } from 'auth-astro/server';

import { Brand } from './Brand';
import CallToAction from './CallToAction.astro';
import { HamburgerMenu, type PathogenMegaMenuItems } from './HamburgerMenu';
import { Navigation } from './Navigation';
import { headerHeight } from './headerConstants';
import { organismConfig } from '../../../types/Organism.ts';
import { ServerSide } from '../../../views/serverSideRouting.ts';
interface Props {
    forceLoggedOutState?: boolean;
}
const pathogenMegaMenuSections = Object.values(organismConfig).map((organism) => {
    const megaMenuSections: PathogenMegaMenuItems[] = Object.values(ServerSide.routing.views[organism.organism]).map(
        (view) => {
            const href = view.getDefaultPageState();
            return {
                label: view.labelLong,
                href,
                underlineColor: organism.menuListEntryDecoration,
                externalLink: false,
            };
        },
    );
    if (organism.organism === 'covid') {
        megaMenuSections.push({
            label: 'CoV-Spectrum',
            href: 'https://cov-spectrum.org',
            underlineColor: organism.menuListEntryDecoration,
            externalLink: true,
        });
    }
    megaMenuSections.push(
        ...ServerSide.routing.externalPages[organism.organism].map((externalPage) => ({
            label: externalPage.label,
            href: externalPage.url,
            underlineColor: organism.menuListEntryDecoration,
            externalLink: true,
        })),
    );
    return {
        headline: organism.label,
        headlineBackgroundColor: organism.backgroundColor,
        navigationEntries: megaMenuSections,
    };
});
interface Props {
    forceLoggedOutState?: boolean;
}
const { forceLoggedOutState = false } = Astro.props;
const session = await getSession(Astro.request);
const showLoggedInState = !forceLoggedOutState && session?.user !== undefined;
---

<header class='sticky top-0 z-10 border-b bg-white'>
    <div class={`flex ${headerHeight} subtitle hidden md:flex md:z-6 gap-4 items-center justify-between`}>
        <Brand name='Genspectrum' />
        <Navigation />
        <CallToAction forceLoggedOutState={forceLoggedOutState} />
    </div>

    <div class={`flex ${headerHeight} md:hidden gap-4 items-center justify-between`}>
        <Brand name='Genspectrum' />
        <HamburgerMenu
            session={session}
            pathogenMegaMenuSections={pathogenMegaMenuSections}
            showLoggedInState={showLoggedInState}
            client:load
        />
    </div>
</header>

---
import type { SequenceType } from '@genspectrum/dashboard-components/util';

import InfluenzaWastewaterInfo from '../../components/InfluenzaWastewaterInfo.astro';
import GsWastewaterMutationsOverTime from '../../components/genspectrum/GsWastewaterMutationsOverTime.astro';
import { defaultBreadcrumbs } from '../../layouts/Breadcrumbs';
import DataPageLayout from '../../layouts/OrganismPage/DataPageLayout.astro';
import { dataOrigins } from '../../types/dataOrigins';
import {
    mutationAnnotationsN1,
    mutationAnnotationsN2,
    wastewaterConfig,
    wastewaterPathFragment,
} from '../../types/wastewaterConfig';

const lapisUrl = `${wastewaterConfig.lapisBaseUrl}/influenza`;
const getReferencesUrl = `${lapisUrl}/sample/aggregated?fields=reference&versionStatus=LATEST_VERSION&isRevocation=false`;
const references = (await (await fetch(getReferencesUrl)).json()).data.map(
    (d: { reference: string }) => d.reference,
) as string[];
---

<DataPageLayout
    title='Swiss wastewater - Influenza'
    breadcrumbs={[
        ...defaultBreadcrumbs,
        { name: 'Swiss Wastewater', href: `/${wastewaterPathFragment}` },
        {
            name: 'Influenza',
            href: wastewaterConfig.pages.influenza,
        },
    ]}
    dataOrigins={[dataOrigins.wise]}
    lapisUrl={lapisUrl}
>
    {
        references.map((reference) => {
            const mutationAnnotations = reference === 'N2' ? mutationAnnotationsN2 : mutationAnnotationsN1;
            return (
                <gs-app lapis={lapisUrl} mutationAnnotations={JSON.stringify(mutationAnnotations)}>
                    <div class='m-4 flex flex-col gap-4'>
                        <>
                            <h2 class='text-2xl'>{reference}</h2>
                            {(['nucleotide', 'amino acid'] satisfies SequenceType[]).map((sequenceType) => (
                                <GsWastewaterMutationsOverTime
                                    title={`${sequenceType} mutations`}
                                    lapisFilter={{
                                        reference,
                                        versionStatus: 'LATEST_VERSION',
                                        isRevocation: false,
                                    }}
                                    sequenceType={sequenceType}
                                >
                                    <InfluenzaWastewaterInfo
                                        slot='infoText'
                                        reference={reference}
                                        sequenceType={sequenceType}
                                    />
                                </GsWastewaterMutationsOverTime>
                            ))}
                        </>
                    </div>
                </gs-app>
            );
        })
    }
</DataPageLayout>

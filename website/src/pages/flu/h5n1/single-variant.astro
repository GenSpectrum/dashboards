---
import ComponentWrapper from '../../../components/ComponentWrapper.astro';
import ComponentsGrid from '../../../components/ComponentsGrid.astro';
import { SingleVariantPageStateSelector } from '../../../components/pageStateSelectors/SingleVariantPageStateSelector';
import { getDashboardsConfig, getLapisUrl } from '../../../config';
import OrganismPageLayout from '../../../layouts/OrganismPage/OrganismPageLayout.astro';
import { Organisms } from '../../../types/Organism';
import { chooseGranularityBasedOnDateRange } from '../../../util/chooseGranularityBasedOnDateRange';
import { defaultTablePageSize, getLineageFilterConfigs } from '../../../views/View';
import { getLapisMutations, getLocationSubdivision } from '../../../views/helpers';
import type { OrganismViewKey } from '../../../views/routing';
import { ServerSide } from '../../../views/serverSideRouting';

const organismViewKey: OrganismViewKey = 'h5n1.singleVariantView';
const view = ServerSide.routing.getOrganismView(organismViewKey);
const pageState = view.parsePageStateFromUrl(Astro.url);

const variantFilter = view.toLapisFilter(pageState);
const baselineFilter = view.toLapisFilterWithoutVariant(pageState);
const timeGranularity = chooseGranularityBasedOnDateRange(
    pageState.baselineFilter.dateRange,
    new Date(view.earliestDate),
);

const { label: subdivisionLabel, field: subdivisionField } = getLocationSubdivision(
    view.locationFields,
    pageState.baselineFilter.location,
);

const initialMutations = getLapisMutations(pageState.variantFilter.mutations);
const lineageFilterConfigs = getLineageFilterConfigs(view.lineageFilters, pageState.variantFilter.lineages);
---

<OrganismPageLayout view={view}>
    <gs-app lapis={getLapisUrl(Organisms.h5n1)}>
        <div class='grid-cols-[300px_1fr] gap-x-4 sm:grid'>
            <SingleVariantPageStateSelector
                locationFilterConfig={{
                    locationFields: view.locationFields,
                    initialLocation: pageState.baselineFilter.location,
                    placeholderText: 'Sampling location',
                }}
                daterRangeFilterConfig={{
                    initialDateRange: pageState.baselineFilter.dateRange,
                    dateRangeOptions: view.dateRangeOptions,
                    earliestDate: view.earliestDate,
                    dateColumn: view.mainDateField,
                }}
                lineageFilterConfigs={lineageFilterConfigs}
                mutationFilterConfig={{ initialMutations }}
                pageState={pageState}
                organismViewKey={organismViewKey}
                organismsConfig={getDashboardsConfig().dashboards.organisms}
                client:only='react'
            />

            <div class='flex flex-col gap-y-6'>
                <ComponentsGrid>
                    <ComponentWrapper title='Prevalence over time'>
                        <gs-prevalence-over-time
                            numeratorFilter={JSON.stringify({
                                displayName: '',
                                lapisFilter: variantFilter,
                            })}
                            denominatorFilter={JSON.stringify(baselineFilter)}
                            lapisDateField={view.mainDateField}
                            granularity={timeGranularity}
                            smoothingWindow='0'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-prevalence-over-time>
                    </ComponentWrapper>
                    <ComponentWrapper title='Nucleotide mutations'>
                        <gs-mutations
                            lapisFilter={JSON.stringify(variantFilter)}
                            sequenceType='nucleotide'
                            views='["grid", "table", "insertions"]'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-mutations>
                    </ComponentWrapper>
                    <ComponentWrapper title='Amino acid mutations'>
                        <gs-mutations
                            lapisFilter={JSON.stringify(variantFilter)}
                            sequenceType='amino acid'
                            views='["grid", "table", "insertions"]'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-mutations>
                    </ComponentWrapper>
                    {
                        subdivisionField !== undefined && (
                            <ComponentWrapper title={subdivisionLabel}>
                                <gs-aggregate
                                    fields={JSON.stringify([subdivisionField])}
                                    filter={JSON.stringify(variantFilter)}
                                    pageSize={defaultTablePageSize}
                                    width='100%'
                                    height='100%'
                                />
                            </ComponentWrapper>
                        )
                    }

                    <ComponentWrapper title='Hosts'>
                        <gs-aggregate
                            fields={JSON.stringify([view.hostField])}
                            filter={JSON.stringify(variantFilter)}
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-aggregate>
                    </ComponentWrapper>
                </ComponentsGrid>
                <ComponentWrapper title='Nucleotide mutations over time' height='600px'>
                    <gs-mutations-over-time
                        width='100%'
                        height='100%'
                        lapisFilter={JSON.stringify(variantFilter)}
                        sequenceType='nucleotide'
                        views='["grid"]'
                        granularity={timeGranularity}
                        lapisDateField={view.mainDateField}></gs-mutations-over-time>
                </ComponentWrapper>

                <ComponentWrapper title='Amino acid mutations over time' height='600px'>
                    <gs-mutations-over-time
                        width='100%'
                        height='100%'
                        lapisFilter={JSON.stringify(variantFilter)}
                        sequenceType='amino acid'
                        views='["grid"]'
                        granularity={timeGranularity}
                        lapisDateField={view.mainDateField}></gs-mutations-over-time>
                </ComponentWrapper>
            </div>
        </div>
    </gs-app>
</OrganismPageLayout>

---
import BaseLayout from '../../../layouts/base/BaseLayout.astro';
import LocationTimeFilter from '../../../components/LocationTimeFilter.astro';
import { H5n1View1 } from '../../../routes/h5n1';
import VariantFilter from '../../../components/VariantFilter.astro';
import { chooseGranularityBasedOnDateRange, extractMutations } from '../../../routes/helpers';
import { getLapisUrl } from '../../../config';
import { defaultTablePageSize, Organisms } from '../../../routes/View';
import ComponentsGrid from '../../../components/ComponentsGrid.astro';
import ComponentWrapper from '../../../components/ComponentWrapper.astro';

const routeData = H5n1View1.view.parseUrl(Astro.url);

const variantFilter = H5n1View1.view.toLapisFilter(routeData);
const baselineFilter = H5n1View1.view.toLapisFilterWithoutVariant(routeData);
const timeGranularity = chooseGranularityBasedOnDateRange({
    from: baselineFilter.sample_collection_dateFrom,
    to: baselineFilter.sample_collection_dateTo,
});

let subDivisionField = undefined;
let subDivisionLabel = '';
if (routeData.baselineFilter.location.geo_loc_country === undefined) {
    subDivisionField = 'geo_loc_country';
    subDivisionLabel = 'Countries';
} else if (routeData.baselineFilter.location.geo_loc_admin_1 === undefined) {
    subDivisionField = 'geo_loc_admin_1';
    subDivisionLabel = 'Geographic sub-divisions';
}

const initialMutations = extractMutations(variantFilter);
---

<BaseLayout title='Single Variant | H5N1 | GenSpectrum'>
    <gs-app lapis={getLapisUrl(Organisms.h5n1)}>
        <div class='grid-cols-[300px_1fr] gap-x-4 sm:grid'>
            <div>
                <div class='bg-blue-50 px-2 py-4'>
                    <div class='mb-2 font-semibold'>Filter dataset:</div>
                    <LocationTimeFilter
                        fields={H5n1View1.view.locationFields}
                        initialLocation={baselineFilter}
                        initialDateRange={routeData.baselineFilter.dateRange}
                        earliestDate={H5n1View1.view.earliestDate}
                        customDateRangeOptions={H5n1View1.view.customDateRangeOptions}
                    />
                </div>
                <div class='border-t-2 bg-green-50 px-2 py-4'>
                    <div class='mb-2 font-semibold'>Search variant:</div>
                    <VariantFilter fields={[]} initialMutations={initialMutations} />
                </div>
            </div>
            <div>
                <ComponentsGrid>
                    <ComponentWrapper title='Prevalence over time'>
                        <gs-prevalence-over-time
                            numeratorFilter={JSON.stringify({
                                displayName: '',
                                lapisFilter: variantFilter,
                            })}
                            denominatorFilter={JSON.stringify(baselineFilter)}
                            lapisDateField='sample_collection_date'
                            granularity={timeGranularity}
                            smoothingWindow='0'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-prevalence-over-time>
                    </ComponentWrapper>
                    <ComponentWrapper title='Nucleotide mutations'>
                        <gs-mutations
                            lapisFilter={JSON.stringify(variantFilter)}
                            sequenceType='nucleotide'
                            views='["grid", "table", "insertions"]'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-mutations>
                    </ComponentWrapper>
                    <ComponentWrapper title='Amino acid mutations'>
                        <gs-mutations
                            lapisFilter={JSON.stringify(variantFilter)}
                            sequenceType='amino acid'
                            views='["grid", "table", "insertions"]'
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-mutations>
                    </ComponentWrapper>
                    {
                        subDivisionField && (
                            <ComponentWrapper title={subDivisionLabel}>
                                <gs-aggregate
                                    fields={JSON.stringify([subDivisionField])}
                                    filter={JSON.stringify(variantFilter)}
                                    pageSize={defaultTablePageSize}
                                    width='100%'
                                    height='100%'
                                />
                            </ComponentWrapper>
                        )
                    }

                    <ComponentWrapper title='Hosts'>
                        <gs-aggregate
                            fields='["host_name_scientific"]'
                            filter={JSON.stringify(variantFilter)}
                            pageSize={defaultTablePageSize}
                            width='100%'
                            height='100%'></gs-aggregate>
                    </ComponentWrapper>
                </ComponentsGrid>
                <ComponentWrapper title='Nucleotide mutations over time' height='600px'>
                    <gs-mutations-over-time
                        width='100%'
                        height='100%'
                        lapisFilter={JSON.stringify(variantFilter)}
                        sequenceType='nucleotide'
                        views='["grid"]'
                        granularity={timeGranularity}
                        lapisDateField='sample_collection_date'></gs-mutations-over-time>
                </ComponentWrapper>

                <ComponentWrapper title='Amino acid mutations over time' height='600px'>
                    <gs-mutations-over-time
                        width='100%'
                        height='100%'
                        lapisFilter={JSON.stringify(variantFilter)}
                        sequenceType='amino acid'
                        views='["grid"]'
                        granularity={timeGranularity}
                        lapisDateField='sample_collection_date'></gs-mutations-over-time>
                </ComponentWrapper>
            </div>
        </div>
    </gs-app>
</BaseLayout>
